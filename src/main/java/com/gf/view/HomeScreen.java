/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.gf.view;

import com.formdev.flatlaf.ui.FlatLineBorder;
import com.gf.entities.Job;
import com.gf.logic.ResourceIO;
import com.gf.logic.events.HomeScreenEventHandler;
import java.awt.Component;
import java.awt.Insets;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.UIManager;

/**
 *
 * @author Andres
 */
public final class HomeScreen extends javax.swing.JFrame implements WindowListener {

    private final HomeScreenEventHandler eventHandler = new HomeScreenEventHandler();
    private final DefaultListModel<Job> listModel = new DefaultListModel<>();

    /**
     * Creates new form HomeScreen
     */
    public HomeScreen() {
        initComponents();
        setInteriorPanel(logoDisplay);
        super.setIconImage(ResourceIO.resourceImage("images/icon.png", 32, 32));
        super.setLocationRelativeTo(null);
        super.setTitle("Jobber");
        super.addWindowListener(this);
    }

    public void setInteriorPanel(JComponent panel) {
        panelView.removeAll();
        panelView.add(panel);
        super.pack();
        panelView.repaint();
//        System.out.println(Arrays.toString(panelView.getComponents()));
    }

    public void updateInterests() {
        listModel.clear();
        for (Job job : eventHandler.loadInterests())
            listModel.addElement(job);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logoDisplay = new javax.swing.JLabel();
        panelView = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listView = new javax.swing.JList<>();
        fieldSearch = new javax.swing.JTextField();

        logoDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoDisplay.setIcon(new ImageIcon(ResourceIO.resourceImage("images/logo.png", 256, 80)));
        logoDisplay.setToolTipText("");
        logoDisplay.setMaximumSize(new java.awt.Dimension(256, 80));
        logoDisplay.setMinimumSize(new java.awt.Dimension(256, 80));
        logoDisplay.setPreferredSize(new java.awt.Dimension(256, 80));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        panelView.setBackground(javax.swing.UIManager.getDefaults().getColor("List.background"));
        panelView.setBorder(new FlatLineBorder(new Insets(1, 1, 1, 1), UIManager.getLookAndFeelDefaults().getColor("Button.borderColor")));
        panelView.setMinimumSize(new java.awt.Dimension(561, 523));
        panelView.setPreferredSize(new java.awt.Dimension(561, 523));
        panelView.setAlignmentX(Component.CENTER_ALIGNMENT);
        panelView.setAlignmentY(Component.CENTER_ALIGNMENT);
        panelView.setLayout(new java.awt.GridBagLayout());

        listView.setModel(listModel);
        jScrollPane1.setViewportView(listView);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fieldSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Job> listView;
    private javax.swing.JLabel logoDisplay;
    private javax.swing.JPanel panelView;
    // End of variables declaration//GEN-END:variables

    @Override
    public void windowOpened(WindowEvent e) {
    }

    @Override
    public void windowClosing(WindowEvent e) {
    }

    @Override
    public void windowClosed(WindowEvent e) {
    }

    @Override
    public void windowIconified(WindowEvent e) {
    }

    @Override
    public void windowDeiconified(WindowEvent e) {
    }

    @Override
    public void windowActivated(WindowEvent e) {
        this.updateInterests();
    }

    @Override
    public void windowDeactivated(WindowEvent e) {
    }
}
